# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 2
inner.vertical = 2
outer.left = 4
outer.bottom = 4
outer.top = 4
outer.right = 4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# cmd-enter = '''exec-and-forget osascript -e '
# tell application "Kitty"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-alt-slash = 'layout tiles horizontal vertical'
cmd-ctrl-alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
cmd-ctrl-alt-h = 'focus left'
cmd-ctrl-alt-j = 'focus down'
cmd-ctrl-alt-k = 'focus up'
cmd-ctrl-alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-ctrl-alt-shift-h = 'move left'
cmd-ctrl-alt-shift-j = 'move down'
cmd-ctrl-alt-shift-k = 'move up'
cmd-ctrl-alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
cmd-ctrl-alt-shift-minus = 'resize smart -50'
cmd-ctrl-alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-ctrl-alt-1 = 'workspace 1'
cmd-ctrl-alt-2 = 'workspace 2'
cmd-ctrl-alt-3 = 'workspace 3'
cmd-ctrl-alt-4 = 'workspace 4'
cmd-ctrl-alt-5 = 'workspace 5'
cmd-ctrl-alt-6 = 'workspace 6'
cmd-ctrl-alt-7 = 'workspace 7'
cmd-ctrl-alt-8 = 'workspace 8'
cmd-ctrl-alt-9 = 'workspace 9'
cmd-ctrl-alt-m = 'workspace M'
cmd-ctrl-alt-s = 'workspace S'
cmd-ctrl-alt-t = 'workspace T'
cmd-ctrl-alt-c = 'workspace C'
cmd-ctrl-alt-w = 'workspace W'

# alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
# alt-b = 'workspace B'
# alt-d = 'workspace D'
# alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# alt-n = 'workspace N'
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
# alt-c = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-ctrl-alt-shift-1 = 'move-node-to-workspace 1'
cmd-ctrl-alt-shift-2 = 'move-node-to-workspace 2'
cmd-ctrl-alt-shift-3 = 'move-node-to-workspace 3'
cmd-ctrl-alt-shift-4 = 'move-node-to-workspace 4'
cmd-ctrl-alt-shift-5 = 'move-node-to-workspace 5'
cmd-ctrl-alt-shift-6 = 'move-node-to-workspace 6'
cmd-ctrl-alt-shift-7 = 'move-node-to-workspace 7'
cmd-ctrl-alt-shift-8 = 'move-node-to-workspace 8'
cmd-ctrl-alt-shift-9 = 'move-node-to-workspace 9'
# alt-shift-a = 'move-node-to-workspace A'
# alt-shift-b = 'move-node-to-workspace B'
cmd-ctrl-alt-shift-c = 'move-node-to-workspace C'
# alt-shift-d = 'move-node-to-workspace D'
# alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
# alt-shift-g = 'move-node-to-workspace G'
# alt-shift-i = 'move-node-to-workspace I'
cmd-ctrl-alt-shift-m = 'move-node-to-workspace M'
cmd-ctrl-alt-shift-w = 'move-node-to-workspace W'
# alt-shift-n = 'move-node-to-workspace N'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
# alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
cmd-ctrl-alt-shift-s = 'move-node-to-workspace S'
cmd-ctrl-alt-shift-t = 'move-node-to-workspace T'
# alt-shift-u = 'move-node-to-workspace U'
# alt-shift-v = 'move-node-to-workspace V'
# alt-shift-w = 'move-node-to-workspace W'
# alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
# alt-shift-z = 'move-node-to-workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
cmd-ctrl-alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-ctrl-alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-alt-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']

# reset layout
r = ['flatten-workspace-tree', 'mode main']
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2

# Toggle between floating and tiling layout
f = ['layout floating tiling', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']

cmd-ctrl-alt-shift-h = ['join-with left', 'mode main']
cmd-ctrl-alt-shift-j = ['join-with down', 'mode main']
cmd-ctrl-alt-shift-k = ['join-with up', 'mode main']
cmd-ctrl-alt-shift-l = ['join-with right', 'mode main']

[workspace-to-monitor-force-assignment]
1 = ['Built-in.*', '.*(3)']
2 = ['Built-in.*', '.*(2)']
3 = ['Built-in.*', '.*(1)']
C = ['Built-in.*', '.*(3)']
T = ['Built-in.*', '.*(3)']
S = ['Built-in.*', '.*(1)']
W = ['Built-in.*', '.*(1)']

#---------------------------------------------------------------- Spotify ---
[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace S'

#------------------------------------------------------------------- Chat ---
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace C'

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = 'move-node-to-workspace C'

#--------------------------------------------------------------- Telegram ---
[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = 'move-node-to-workspace T'

[[on-window-detected]]
if.app-id = 'com.facebook.archon.developerID'
run = 'move-node-to-workspace T'

#------------------------------------------------------------------- Mail ---
[[on-window-detected]]
if.app-id = 'com.readdle.smartemail-Mac'
run = 'move-node-to-workspace M'

[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = 'move-node-to-workspace M'

#------------------------------------------------------------------- Work ---
[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace W'

[[on-window-detected]]
if.app-id = 'com.microsoft.Outlook'
run = 'move-node-to-workspace W'

#------------------------------------------------------------------ Float ---
[[on-window-detected]]
if.app-id = 'com.omnigroup.OmniFocus4'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'
