return {
  cmd = { "tailwindcss-language-server", "--stdio" },
  filetypes = {
    "aspnetcorerazor",
    "astro",
    "astro-markdown",
    "blade",
    "clojure",
    "django-html",
    "htmldjango",
    "edge",
    "eelixir",
    "elixir",
    "ejs",
    "erb",
    "eruby",
    "gohtml",
    "gohtmltmpl",
    "haml",
    "handlebars",
    "hbs",
    "html",
    "htmlangular",
    "html-eex",
    "heex",
    "jade",
    "leaf",
    "liquid",
    "markdown",
    "mdx",
    "mustache",
    "njk",
    "nunjucks",
    "php",
    "razor",
    "slim",
    "twig",
    "css",
    "less",
    "postcss",
    "sass",
    "scss",
    "stylus",
    "sugarss",
    "javascript",
    "javascriptreact",
    "reason",
    "rescript",
    "typescript",
    "typescriptreact",
    "vue",
    "svelte",
    "templ",
  },
  root_markers = { ".git", "package.json", "mix.exs", "Gemfile", "node_modules" },
  autostart = true,
  capabilities = {
    textDocument = {
      completion = {
        completionItem = {
          snippetSupport = true,
        },
      },
    },
  },
  init_options = {
    userLanguages = {
      elixir = "html-eex",
      eelixir = "html-eex",
      heex = "html-eex",
    },
  },
  settings = {
    -- tailwindCSS = {
    --   validate = true,
    --   lint = {
    --     cssConflict = 'warning',
    --     invalidApply = 'error',
    --     invalidScreen = 'error',
    --     invalidVariant = 'error',
    --     invalidConfigPath = 'error',
    --     invalidTailwindDirective = 'error',
    --     recommendedVariantOrder = 'warning',
    --   },
    --   classAttributes = {
    --     'class',
    --     'className',
    --     'class:list',
    --     'classList',
    --     'ngClass',
    --   },
    --   includeLanguages = {
    --     eelixir = 'html-eex',
    --     eruby = 'erb',
    --     templ = 'html',
    --     htmlangular = 'html',
    --   },
    -- },
    experimental = {
      classRegex = {
        [[class= "([^"]*)]],
        [[class: "([^"]*)]],
        '~H""".*class="([^"]*)".*"""',
        '~F""".*class="([^"]*)".*"""',
      },
    },
  },
}
